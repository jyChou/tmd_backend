{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","hooks/useData.js","hooks/useStep.js","resource/model.png","components/Card/styles/card.js","components/Card/index.js","view/Main/index.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useData","useState","sentences","setSentences","selectList","setSelectList","labels","setlabels","updateSentences","article","arrayOfStrings","replace","split","updateSelectList","selectId","temp","includes","filter","item","sort","updateLabels","idx","value","hasOwnProperty","getScore","total","length","Object","keys","toFixed","factExtraction","payload","axios","post","res","window","alert","console","log","data","map","push","catch","err","useStep","step","setStep","nextStep","prevStep","Container","styled","div","Body","props","width","Title","span","Subtitle","Textarea","textarea","hasInput","css","Textinput","input","SentenceList","Wrapper","Sentence","button","selected","Image","img","ButtonWrapper","Button","model","Factbox","verified","Card","children","restProps","Step1","text","setText","placeholder","onChange","e","target","onClick","Step2","id","s","src","modelIcon","Step3","Step4","score","setScore","useEffect","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710d06b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useData = () => {\r\n  const [sentences, setSentences] = useState([]);\r\n  const [selectList, setSelectList] = useState([]);\r\n  const [labels, setlabels] = useState({});\r\n\r\n  const updateSentences = (article) => {\r\n    let arrayOfStrings = article\r\n      .replace(/([.?!])\\s*(?=[A-Z])/g, \"$1|\")\r\n      .split(\"|\");\r\n    setSentences(arrayOfStrings);\r\n  };\r\n  const updateSelectList = (selectId) => {\r\n    let temp = [...selectList];\r\n    if (temp.includes(selectId)) {\r\n      temp = temp.filter(function (item) {\r\n        return item !== selectId;\r\n      });\r\n    } else {\r\n      temp = [...temp, selectId];\r\n    }\r\n    setSelectList(temp.sort());\r\n  };\r\n  const updateLabels = (idx) => (value) => {\r\n    if (!value) {\r\n      let temp = { ...labels };\r\n      if (labels.hasOwnProperty(idx)) {\r\n        delete temp[idx];\r\n      }\r\n      setlabels(temp);\r\n    } else {\r\n      let temp = { ...labels };\r\n      temp[idx] = value;\r\n      setlabels(temp);\r\n    }\r\n  };\r\n  const getScore = () => {\r\n    const total = selectList.length;\r\n    const labelled = Object.keys(labels).length;\r\n    return ((labelled / total) * 100).toFixed(0);\r\n  };\r\n  const factExtraction = () => {\r\n    const payload = {\"content\":sentences};\r\n    axios\r\n    .post(`http://127.0.0.1:8000/fact-extraction/`, payload)\r\n    .then(res => {\r\n        window.alert(\"Success\");\r\n        console.log(res.data)\r\n        const temp = []\r\n        sentences.map((item, idx)=>{\r\n            console.log(item, res.data[item])\r\n            if(res.data[item] === 1){\r\n                temp.push(idx);\r\n            }\r\n        })\r\n        setSelectList(temp);\r\n    }).catch(err => {\r\n        window.alert(\"Failed on fact extraction!\");\r\n        console.log(err);\r\n    })\r\n  }\r\n  return {\r\n    sentences,\r\n    updateSentences,\r\n    selectList,\r\n    updateSelectList,\r\n    labels,\r\n    updateLabels,\r\n    getScore,\r\n    factExtraction\r\n  };\r\n};\r\n\r\nexport default useData;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nconst useStep = () => {\r\n    const [step, setStep] = useState(1);\r\n    const nextStep = () => {\r\n        setStep(step => step + 1);\r\n    }\r\n    const prevStep = () => {\r\n        setStep(step => step - 1);\r\n    }\r\n    return {\r\n        step,\r\n        nextStep,\r\n        prevStep\r\n    };\r\n}\r\n\r\nexport default useStep;","export default __webpack_public_path__ + \"static/media/model.1411e601.png\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding-top: 30px;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: ${(props) => `${props.width}px`};\r\n`;\r\nexport const Title = styled.span`\r\n  font-size: 36px;\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-weight: 700;\r\n  padding: 50px 0px;\r\n`;\r\n\r\nexport const Subtitle = styled.span`\r\n  font-size: 20px;\r\n  font-family: \"Raleway\", sans-serif;\r\n  padding: 30px 0px;\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n  background: rgba(253, 235, 191, 0.3);\r\n  font-family: \"Raleway\", sans-serif;\r\n  height: 650px;\r\n  width: 100%;\r\n  margin-bottom: 35px;\r\n  border: 0px;\r\n  ::placeholder {\r\n    color: rgba(56, 54, 54, 0.5);\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n  }\r\n  ${(props) =>\r\n    props.hasInput &&\r\n    css`\r\n      background: #fdebbf;\r\n      font-family: \"Roboto\", sans-serif;\r\n      font-size: 18px;\r\n      line-height: 24px;\r\n    `}\r\n`;\r\nexport const Textinput = styled.input`\r\n  background: rgba(253, 235, 191, 0.3);\r\n  font-family: \"Raleway\", sans-serif;\r\n  padding: 20px;\r\n  width: 95%;\r\n  margin-bottom: 10px;\r\n  border: 0px;\r\n  ::placeholder {\r\n    color: rgba(56, 54, 54, 0.5);\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n  }\r\n  ${(props) =>\r\n    props.hasInput &&\r\n    css`\r\n      background: #fdebbf;\r\n      font-family: \"Roboto\", sans-serif;\r\n      font-size: 16px;\r\n    `}\r\n`;\r\nexport const SentenceList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 640px;\r\n  overflow: auto;\r\n  width: ${(props) => `${props.width}px` || \"500px\"};\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\nexport const Sentence = styled.button`\r\n  padding: 15px;\r\n  width: 95%;\r\n  background: rgba(253, 235, 191, 0.3);\r\n  border: 1px solid rgba(56, 54, 54, 0.3);\r\n  border-radius: 20px;\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n  ${(props) =>\r\n    props.selected &&\r\n    css`\r\n      background: #fdebbf;\r\n      border: 1px solid rgba(56, 54, 54, 0.8);\r\n    `}\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${(props) => `${props.width}px`};\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  padding-left: 20px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\nexport const Button = styled.button`\r\n  padding: 15px;\r\n  background: rgba(253, 235, 191, 0.3);\r\n  border: 1px solid rgba(56, 54, 54, 0.3);\r\n  border-radius: 20px;\r\n  ${(props) =>\r\n    props.selected &&\r\n    css`\r\n      background: #fdebbf;\r\n      border: 1px solid rgba(56, 54, 54, 0.8);\r\n    `}\r\n  ${(props) =>\r\n    props.model &&\r\n    css`\r\n      background: linear-gradient(\r\n        rgba(181, 249, 38, 0.5),\r\n        rgba(4, 255, 195, 0.5)\r\n      );\r\n      border: 0px;\r\n    `}\r\n`;\r\n\r\nexport const Factbox = styled.span`\r\n  background: linear-gradient(rgba(255, 205, 27, 0.5), rgba(254, 124, 83, 0.5));\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 10px;\r\n  ${(props) =>\r\n    props.verified &&\r\n    css`\r\n      background: linear-gradient(\r\n        rgba(181, 249, 38, 0.5),\r\n        rgba(4, 255, 195, 0.5)\r\n      );\r\n\r\n      border: 0px solid rgba(56, 54, 54, 0.8);\r\n    `}\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Body,\r\n  Title,\r\n  Subtitle,\r\n  Textarea,\r\n  Textinput,\r\n  Button,\r\n  Sentence,\r\n  SentenceList,\r\n  Wrapper,\r\n  Image,\r\n  ButtonWrapper,\r\n  Factbox,\r\n} from \"./styles/card\";\r\n\r\nexport default function Card({ children, ...restProps }) {\r\n  return <Container {...restProps}>{children}</Container>;\r\n}\r\n\r\nCard.Title = function CardTitle({ children, ...restProps }) {\r\n  return <Title {...restProps}>{children}</Title>;\r\n};\r\n\r\nCard.Subtitle = function CardSubtitle({ children, ...restProps }) {\r\n  return <Subtitle {...restProps}>{children}</Subtitle>;\r\n};\r\nCard.Body = function CardBody({ children, ...restProps }) {\r\n  return <Body {...restProps}>{children}</Body>;\r\n};\r\n\r\nCard.Textarea = function CardTextarea({ children, ...restProps }) {\r\n  return <Textarea {...restProps}>{children}</Textarea>;\r\n};\r\n\r\nCard.Textinput = function CardTextinput({ children, ...restProps }) {\r\n  return <Textinput {...restProps}>{children}</Textinput>;\r\n};\r\nCard.ButtonWrapper = function CardButtonWrapper({ children, ...restProps }) {\r\n  return <ButtonWrapper {...restProps}>{children}</ButtonWrapper>;\r\n};\r\n\r\nCard.Button = function CardButton({ children, ...restProps }) {\r\n  return <Button {...restProps}>{children}</Button>;\r\n};\r\n\r\nCard.Sentence = function CardSentence({ children, ...restProps }) {\r\n  return <Sentence {...restProps}>{children}</Sentence>;\r\n};\r\n\r\nCard.SentenceList = function CardSentenceList({ children, ...restProps }) {\r\n  return <SentenceList {...restProps}>{children}</SentenceList>;\r\n};\r\n\r\nCard.Wrapper = function CardWrapper({ children, ...restProps }) {\r\n  return <Wrapper {...restProps}>{children}</Wrapper>;\r\n};\r\n\r\nCard.Image = function CardImage({ children, ...restProps }) {\r\n  return <Image {...restProps}>{children}</Image>;\r\n};\r\n\r\nCard.Factbox = function CardFactbox({ children, ...restProps }) {\r\n  return <Factbox {...restProps}>{children}</Factbox>;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useData from \"../../hooks/useData\";\r\nimport useStep from \"../../hooks/useStep\";\r\nimport modelIcon from \"../../resource/model.png\";\r\nimport Card from \"../../components/Card\";\r\n\r\nconst Step1 = ({ text, setText, updateSentences, nextStep }) => {\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n    updateSentences(text);\r\n  };\r\n  return (\r\n    <Card>\r\n      <Card.Body width={800}>\r\n        <Card.Title>Step1. Please enter your article</Card.Title>\r\n        <Card.Textarea\r\n          hasInput={text}\r\n          placeholder=\"Your work starts here...\"\r\n          onChange={handleChange}\r\n          value={text}\r\n        ></Card.Textarea>\r\n        <Card.ButtonWrapper>\r\n          <Card.Button\r\n            selected={text}\r\n            onClick={() => {\r\n              nextStep();\r\n              updateSentences(text);\r\n            }}\r\n          >\r\n            Next >\r\n          </Card.Button>\r\n        </Card.ButtonWrapper>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Step2 = ({\r\n  sentences,\r\n  selectList,\r\n  updateSelectList,\r\n  nextStep,\r\n  prevStep,\r\n  factExtraction\r\n}) => {\r\n  return (\r\n    <Card>\r\n      <Card.Body width={800} id=\"main\">\r\n        <Card.Title>Step2. Select the facts in your article </Card.Title>\r\n        <Card.Wrapper>\r\n          <Card.SentenceList>\r\n            {sentences.map((s, idx) => {\r\n              return (\r\n                <Card.Sentence\r\n                  selected={selectList.includes(idx)}\r\n                  onClick={() => updateSelectList(idx)}\r\n                >\r\n                  {s}\r\n                </Card.Sentence>\r\n              );\r\n            })}\r\n          </Card.SentenceList>\r\n          <Card.Body width={400} id=\"button-body\">\r\n            <Card.Image src={modelIcon} width={65}></Card.Image>\r\n            <Card.Subtitle>Find the facts for me! (Beta)</Card.Subtitle>\r\n            <Card.Button model onClick={() => {factExtraction()}}>\r\n              {\"Fact Extraction\"}\r\n            </Card.Button>\r\n          </Card.Body>\r\n        </Card.Wrapper>\r\n        <Card.ButtonWrapper>\r\n          <Card.Button\r\n            selected={true}\r\n            onClick={() => {\r\n              nextStep();\r\n            }}\r\n          >\r\n            {\"Next >\"}\r\n          </Card.Button>\r\n          <Card.Button\r\n            selected={true}\r\n            onClick={() => {\r\n              prevStep();\r\n            }}\r\n          >\r\n            {\"< Prev\"}\r\n          </Card.Button>\r\n        </Card.ButtonWrapper>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Step3 = ({ nextStep, prevStep, sentences, selectList, updateLabels }) => {\r\n  return (\r\n    <Card>\r\n      <Card.Body width={800}>\r\n        <Card.Title>Step3. Add sources for your facts!</Card.Title>\r\n        <Card.SentenceList width={800}>\r\n          {sentences.map((s, idx) => {\r\n            if (selectList.includes(idx)) {\r\n              return (\r\n                <>\r\n                  <Card.Subtitle>{s}</Card.Subtitle>\r\n                  <Card.Textinput\r\n                    placeholder=\"Enter the URL for the source\"\r\n                    onChange={(e) => {\r\n                      updateLabels(idx)(e.target.value);\r\n                    }}\r\n                  ></Card.Textinput>\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </Card.SentenceList>\r\n\r\n        <Card.ButtonWrapper>\r\n          <Card.Button\r\n            selected={true}\r\n            onClick={() => {\r\n              nextStep();\r\n            }}\r\n          >\r\n            {\"Next >\"}\r\n          </Card.Button>\r\n          <Card.Button\r\n            selected={true}\r\n            onClick={() => {\r\n              prevStep();\r\n            }}\r\n          >\r\n            {\"< Prev\"}\r\n          </Card.Button>\r\n        </Card.ButtonWrapper>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Step4 = ({ sentences, selectList, labels, getScore }) => {\r\n  const [score, setScore] = useState(\"\");\r\n  useEffect(() => {\r\n    let temp = getScore();\r\n    setScore(temp);\r\n  }, labels);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body width={800}>\r\n        <Card.Title>Your Authenticty Score is</Card.Title>\r\n        <Card.Title>{score}</Card.Title>\r\n        <Card.SentenceList>\r\n          <Card.Subtitle>Verified Fact</Card.Subtitle>\r\n          {sentences.map((s, idx) => {\r\n            if (selectList.includes(idx) && idx in labels) {\r\n              return (\r\n                <Card.Factbox verified>\r\n                  {s} <br /> {labels[idx]}\r\n                </Card.Factbox>\r\n              );\r\n            }\r\n          })}\r\n        </Card.SentenceList>\r\n        <Card.SentenceList>\r\n          <Card.Subtitle>Unverified Fact</Card.Subtitle>\r\n          {sentences.map((s, idx) => {\r\n            if (selectList.includes(idx) && !(idx in labels)) {\r\n              return <Card.Factbox>{s}</Card.Factbox>;\r\n            }\r\n          })}\r\n        </Card.SentenceList>\r\n        <Card.ButtonWrapper>\r\n          <Card.Button selected={true}>{\"Share\"}</Card.Button>\r\n        </Card.ButtonWrapper>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Main = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const { step, nextStep, prevStep } = useStep();\r\n  const {\r\n    sentences,\r\n    updateSentences,\r\n    selectList,\r\n    updateSelectList,\r\n    labels,\r\n    updateLabels,\r\n    getScore,\r\n    factExtraction\r\n  } = useData();\r\n\r\n  if (step === 1) {\r\n    return (\r\n      <Step1\r\n        text={text}\r\n        setText={setText}\r\n        updateSentences={updateSentences}\r\n        nextStep={nextStep}\r\n      />\r\n    );\r\n  } else if (step === 2) {\r\n    return (\r\n      <Step2\r\n        sentences={sentences}\r\n        selectList={selectList}\r\n        nextStep={nextStep}\r\n        prevStep={prevStep}\r\n        updateSelectList={updateSelectList}\r\n        factExtraction={factExtraction}\r\n      ></Step2>\r\n    );\r\n  } else if (step === 3) {\r\n    return (\r\n      <Step3\r\n        sentences={sentences}\r\n        selectList={selectList}\r\n        updateLabels={updateLabels}\r\n        nextStep={nextStep}\r\n        prevStep={prevStep}\r\n      ></Step3>\r\n    );\r\n  } else if (step === 4) {\r\n    return (\r\n      <Step4\r\n        sentences={sentences}\r\n        selectList={selectList}\r\n        labels={labels}\r\n        getScore={getScore}\r\n      ></Step4>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './view/Main';\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}